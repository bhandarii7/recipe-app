{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAsBeA,EAnBA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAElC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,8CAAiBC,KACjB,6BAEQE,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAK3B,qBAAKC,IAAKR,EAAOS,IAAKX,Q,MCwCnBY,MArDf,WAEE,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAGGA,EAASC,OAHZ,OAGXC,EAHW,OAIjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MALA,2CAAH,qDAoBhB,OACE,sBAAKvB,UAAU,MAAf,UACC,uBAAM0B,SARS,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKkBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SAfzC,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAehB,wBAAQ9B,UAAU,gBAAgB6B,KAAK,SAAvC,uBAEF,qBAAK7B,UAAU,UAAf,SACCU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJpBG,EAAOA,OAAO+B,gBClCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.0e659f56.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe = ({title,calories,image,ingredients}) => {\r\n\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <span>calories: {calories}</span>\r\n            <ul>\r\n                {\r\n                    ingredients.map(ingredient=>(\r\n                       <li>{ingredient.text}</li> \r\n                    ))\r\n                }\r\n            </ul>\r\n\r\n            <img src={image} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React, { useEffect, useState} from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nfunction App() {\n\n  const APP_ID = '8b659289';\n  const APP_KEY = 'b95f2d282d9c2db56f3794d05452180a';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n  useEffect(() => {\n    getRecipes();\n  },[query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data =  await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e =>{\n    setSearch(e.target.value);\n    \n\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return (\n    <div className=\"App\">\n     <form onSubmit={getSearch} className='search-form'>\n       <input className='search-bar' type=\"text\" value={search} onChange={updateSearch} />\n       <button className='search-button' type='submit'>Search</button>\n     </form>\n     <div className='recipes'>\n     {recipes.map(recipe =>(\n       <Recipe \n       key = {recipe.recipe.label}\n       title={recipe.recipe.label} \n       calories={recipe.recipe.calories} \n       image={recipe.recipe.image}\n       ingredients={recipe.recipe.ingredients}  />\n     ))}\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2BWrC\"};"],"sourceRoot":""}